import os
import asyncio
import traceback
import json
from flask import Flask, request
from telegram import Update, WebAppInfo, KeyboardButton, ReplyKeyboardMarkup, Bot, error
from supabase import create_client, Client

# === –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –û–ë–õ–ê–°–¢–¨: –¢–û–õ–¨–ö–û –°–ê–ú–û–ï –õ–ï–ì–ö–û–ï ===
# –ó–¥–µ—Å—å –º—ã —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞–µ–º Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –ë–æ–ª—å—à–µ –Ω–∏—á–µ–≥–æ.
app = Flask(__name__)

# === –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ===
# –û–Ω–∏ –±—É–¥—É—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –∏–∑ –≤–µ–±—Ö—É–∫–∞
async def save_user_async(supabase_client, user_id: int):
    try:
        await asyncio.to_thread(supabase_client.table('users').upsert, {'chat_id': user_id}, on_conflict='chat_id')
        print(f"--- –£–°–ü–ï–•: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ Supabase. ---")
    except Exception as e:
        print(f"--- –û–®–ò–ë–ö–ê –≤ save_user_async: {e} ---")

async def handle_start_async(bot, supabase_client, update: Update):
    user_id = update.message.chat_id
    await save_user_async(supabase_client, user_id)
    keyboard = [
        [KeyboardButton("–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π", web_app=WebAppInfo(url="https://aleksei23122012.teamly.ru/space/00647e86-cd4b-46ef-9903-0af63964ad43/article/17e16e2a-92ff-463c-8bf4-eaaf202c0bc7"))],
        [KeyboardButton("–û—Ç—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏–π", web_app=WebAppInfo(url="https://baza-znaniy-app.vercel.app/"))],
        [KeyboardButton("–û—Ç–∑—ã–≤—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è", web_app=WebAppInfo(url="https://docs.google.com/forms/d/e/1FAIpQLSedAPNqKkoJxer4lISLVsQgmu6QpPagoWreyvYOz7DbFuanFw/viewform?usp=header"))]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! üòä\n\n–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π.",
        reply_markup=reply_markup
    )

async def handle_admin_command_async(bot, update: Update):
    await update.message.reply_text("–ö–æ–º–∞–Ω–¥–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞ –∏ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞.")
    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø–æ–ª–Ω–∞—è –ª–æ–≥–∏–∫–∞ /stats –∏ /broadcast


# === –ì–õ–ê–í–ù–´–ô –í–ï–ë–•–£–ö: –í–°–Ø –†–ê–ë–û–¢–ê –ü–†–û–ò–°–•–û–î–ò–¢ –ó–î–ï–°–¨ ===
@app.route('/', methods=['POST'])
def webhook():
    print("\n--- 1. –í–ï–ë–•–£–ö –í–´–ó–í–ê–ù ---")
    try:
        # === –®–ê–ì –ê: –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –í–ù–£–¢–†–ò –ó–ê–ü–†–û–°–ê ===
        # –≠—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ö–ê–ñ–î–´–ô —Ä–∞–∑ –∏ —Ä–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É "—Ö–æ–ª–æ–¥–Ω–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞"
        BOT_TOKEN = os.environ['BOT_TOKEN']
        SUPABASE_URL = os.environ['SUPABASE_URL']
        SUPABASE_KEY = os.environ['SUPABASE_KEY']
        ADMIN_IDS_STR = os.environ.get('ADMIN_IDS', '')
        ADMIN_IDS = [int(admin_id) for admin_id in ADMIN_IDS_STR.split(',') if admin_id.strip()]

        bot = Bot(token=BOT_TOKEN)
        supabase: Client = create_client(SUPABASE_URL, SUPABASE_KEY)
        print("--- 2. –ö–õ–ò–ï–ù–¢–´ Bot –∏ Supabase —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã. ---")

        # === –®–ê–ì –ë: –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–ü–†–û–°–ê ===
        update_data = request.get_json()
        print(f"--- 3. –ü–û–õ–£–ß–ï–ù–´ –î–ê–ù–ù–´–ï: {json.dumps(update_data, indent=2)} ---")
        
        update = Update.de_json(update_data, bot)
        
        if not (update.message and update.message.text):
            print("--- 4. –í –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –í—ã—Ö–æ–¥. ---")
            return "ok", 200

        print(f"--- 4. –£–°–ü–ï–•: –ï—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ '{update.message.text}' –æ—Ç {update.message.chat_id}. ---")
        
        # === –®–ê–ì –í: –í–´–ó–û–í –û–ë–†–ê–ë–û–¢–ß–ò–ö–ê ===
        text = update.message.text
        if text == '/start':
            print("--- 5. –í–´–ó–´–í–ê–ï–ú –û–ë–†–ê–ë–û–¢–ß–ò–ö /start ---")
            asyncio.run(handle_start_async(bot, supabase, update))
        elif text.startswith('/') and update.message.chat_id in ADMIN_IDS:
            print("--- 5. –í–´–ó–´–í–ê–ï–ú –û–ë–†–ê–ë–û–¢–ß–ò–ö –ê–î–ú–ò–ù–ê ---")
            # –ü–æ–∑–∂–µ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ø–æ–ª–Ω–∞—è –ª–æ–≥–∏–∫–∞, —Å–µ–π—á–∞—Å –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—Ç
            asyncio.run(handle_admin_command_async(bot, update))

    except KeyError as e:
        print(f"--- !!! –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è: {e} !!! ---")
    except Exception as e:
        print(f"--- !!! –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –í–ù–£–¢–†–ò –í–ï–ë–•–£–ö–ê !!! ---")
        print(traceback.format_exc())
            
    print("--- 6. –ó–ê–í–ï–†–®–ï–ù–ò–ï –†–ê–ë–û–¢–´ –í–ï–ë–•–£–ö–ê ---")
    return 'ok', 200
