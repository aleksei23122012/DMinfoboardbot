import os
import asyncio
import traceback
import json # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º json –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
from flask import Flask, request
from telegram import Update, WebAppInfo, KeyboardButton, ReplyKeyboardMarkup, Bot, error
from supabase import create_client, Client

# === –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —á–∏—Ç–∞—é—Ç—Å—è –Ω–∞ —Å—Ç–∞—Ä—Ç–µ ===
# –≠—Ç–æ—Ç –±–ª–æ–∫ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ "–ø—Ä–æ–≥—Ä–µ–≤–µ" —Å–µ—Ä–≤–µ—Ä–∞ Vercel
print("--- [–°–¢–ê–†–¢] –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª—è api/index.py ---")
try:
    BOT_TOKEN = os.environ.get('BOT_TOKEN')
    SUPABASE_URL = os.environ.get('SUPABASE_URL')
    SUPABASE_KEY = os.environ.get('SUPABASE_KEY')
    ADMIN_IDS_STR = os.environ.get('ADMIN_IDS', '')
    
    if not all([BOT_TOKEN, SUPABASE_URL, SUPABASE_KEY, ADMIN_IDS_STR]):
        print("--- [–°–¢–ê–†–¢] –í–ù–ò–ú–ê–ù–ò–ï: –û–¥–Ω–∞ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø—Ä–∏ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ! ---")

    ADMIN_IDS = [int(admin_id) for admin_id in ADMIN_IDS_STR.split(',') if admin_id.strip()]

    bot = Bot(token=BOT_TOKEN)
    app = Flask(__name__)
    supabase: Client = create_client(SUPABASE_URL, SUPABASE_KEY)
    print("--- [–°–¢–ê–†–¢] –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ. ---")

except Exception as e:
    print(f"--- [–°–¢–ê–†–¢] !!! –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ü–†–ò –ì–õ–û–ë–ê–õ–¨–ù–û–ô –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò: {e} ---")
    print(traceback.format_exc())


# === –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ===
async def save_user_async(user_id: int):
    try:
        await asyncio.to_thread(supabase.table('users').upsert, {'chat_id': user_id}, on_conflict='chat_id')
        print(f"--- –£–°–ü–ï–•: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ Supabase. ---")
    except Exception as e:
        print(f"--- –û–®–ò–ë–ö–ê –≤ save_user_async: {e} ---")

async def handle_start_async(update: Update):
    user_id = update.message.chat_id
    await save_user_async(user_id)
    keyboard = [
        [KeyboardButton("–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π", web_app=WebAppInfo(url="https://aleksei23122012.teamly.ru/space/00647e86-cd4b-46ef-9903-0af63964ad43/article/17e16e2a-92ff-463c-8bf4-eaaf202c0bc7"))],
        [KeyboardButton("–û—Ç—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏–π", web_app=WebAppInfo(url="https://baza-znaniy-app.vercel.app/"))],
        [KeyboardButton("–û—Ç–∑—ã–≤—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è", web_app=WebAppInfo(url="https://docs.google.com/forms/d/e/1FAIpQLSedAPNqKkoJxer4lISLVsQgmu6QpPagoWreyvYOz7DbFuanFw/viewform?usp=header"))]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! üòä\n\n–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏ –≤–∞—à ID —Å–æ—Ö—Ä–∞–Ω–µ–Ω –¥–ª—è —Ä–∞—Å—Å—ã–ª–æ–∫. (v_debug)",
        reply_markup=reply_markup
    )

async def handle_admin_command_async(update: Update):
    # –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞
    await update.message.reply_text("–ö–æ–º–∞–Ω–¥–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞! (v_debug)")


# === –ì–õ–ê–í–ù–´–ô –í–ï–ë–•–£–ö –° –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–´–ú –õ–û–ì–ò–†–û–í–ê–ù–ò–ï–ú ===
@app.route('/', methods=['POST'])
def webhook():
    print("\n--- 1. –í–ï–ë–•–£–ö –í–´–ó–í–ê–ù ---")
    try:
        # –ü–æ–ª—É—á–∞–µ–º "—Å—ã—Ä—ã–µ" –±–∞–π—Ç—ã —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
        raw_data = request.get_data()
        print(f"--- 2. –ü–û–õ–£–ß–ï–ù–´ –°–´–†–´–ï –î–ê–ù–ù–´–ï (raw_data), –¥–ª–∏–Ω–∞: {len(raw_data)} –±–∞–π—Ç ---")
        
        if not raw_data:
            print("--- 3. –ü–†–û–í–ê–õ: –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –ø—É—Å—Ç–æ–µ. –í—ã—Ö–æ–¥. ---")
            return "ok", 200

        # –î–µ–∫–æ–¥–∏—Ä—É–µ–º –±–∞–π—Ç—ã –≤ —Å—Ç—Ä–æ–∫—É –∏ –ø–∞—Ä—Å–∏–º JSON
        update_data = json.loads(raw_data.decode('utf-8'))
        print(f"--- 3. –£–°–ü–ï–•: –î–∞–Ω–Ω—ã–µ JSON: {json.dumps(update_data, indent=2)} ---")
        
        update = Update.de_json(update_data, bot)
        
        if not (update.message and update.message.text):
            print("--- 4. –ü–†–û–í–ê–õ: –í –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –í—ã—Ö–æ–¥. ---")
            return "ok", 200

        print(f"--- 4. –£–°–ü–ï–•: –ï—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ '{update.message.text}' –æ—Ç {update.message.chat_id}. ---")
        
        text = update.message.text
        if text == '/start':
            print("--- 5. –í–´–ó–´–í–ê–ï–ú –û–ë–†–ê–ë–û–¢–ß–ò–ö /start ---")
            asyncio.run(handle_start_async(update))
        elif text.startswith('/') and update.message.chat_id in ADMIN_IDS:
            print("--- 5. –í–´–ó–´–í–ê–ï–ú –û–ë–†–ê–ë–û–¢–ß–ò–ö –ê–î–ú–ò–ù–ê ---")
            asyncio.run(handle_admin_command_async(update))
        else:
            print("--- 5. –ü–†–û–í–ê–õ: –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∏–∑–≤–µ—Å—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π. ---")

    except Exception as e:
        print(f"--- !!! –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –í–ù–£–¢–†–ò –í–ï–ë–•–£–ö–ê !!! ---")
        # –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–≤–µ–¥–µ—Ç –ü–û–õ–ù–£–Æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ –≤ –ª–æ–≥–∏
        print(traceback.format_exc())
            
    print("--- 6. –ó–ê–í–ï–†–®–ï–ù–ò–ï –†–ê–ë–û–¢–´ –í–ï–ë–•–£–ö–ê ---")
    return 'ok', 200
