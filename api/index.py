import os
import asyncio
import traceback
import json # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º json –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
from flask import Flask, request
from telegram import Update, WebAppInfo, KeyboardButton, ReplyKeyboardMarkup, Bot, error
from supabase import create_client, Client

# === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø (–≤—ã–Ω–µ—Å–µ–Ω–∞ –Ω–∞—Ä—É–∂—É –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏) ===
BOT_TOKEN = os.environ.get('BOT_TOKEN')
SUPABASE_URL = os.environ.get('SUPABASE_URL')
SUPABASE_KEY = os.environ.get('SUPABASE_KEY')
ADMIN_IDS_STR = os.environ.get('ADMIN_IDS', '')
ADMIN_IDS = [int(admin_id) for admin_id in ADMIN_IDS_STR.split(',') if admin_id.strip()]

bot = Bot(token=BOT_TOKEN)
app = Flask(__name__)
supabase: Client = create_client(SUPABASE_URL, SUPABASE_KEY)

# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
async def save_user_async(user_id: int):
    try:
        await asyncio.to_thread(supabase.table('users').upsert, {'chat_id': user_id}, on_conflict='chat_id')
        print(f"--- –£–°–ü–ï–•: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ Supabase. ---")
    except Exception as e:
        print(f"--- –û–®–ò–ë–ö–ê –≤ save_user_async: {e} ---")

async def handle_start_async(update: Update):
    user_id = update.message.chat_id
    await save_user_async(user_id)
    keyboard = [
        [KeyboardButton("–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π", web_app=WebAppInfo(url="https://aleksei23122012.teamly.ru/space/00647e86-cd4b-46ef-9903-0af63964ad43/article/17e16e2a-92ff-463c-8bf4-eaaf202c0bc7"))],
        [KeyboardButton("–û—Ç—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏–π", web_app=WebAppInfo(url="https://baza-znaniy-app.vercel.app/"))],
        [KeyboardButton("–û—Ç–∑—ã–≤—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è", web_app=WebAppInfo(url="https://docs.google.com/forms/d/e/1FAIpQLSedAPNqKkoJxer4lISLVsQgmu6QpPagoWreyvYOz7DbFuanFw/viewform?usp=header"))]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! üòä\n\n–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏ –≤–∞—à ID —Å–æ—Ö—Ä–∞–Ω–µ–Ω –¥–ª—è —Ä–∞—Å—Å—ã–ª–æ–∫.",
        reply_markup=reply_markup
    )

async def handle_admin_command_async(update: Update):
    # ... (—ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
    if update.message.chat_id not in ADMIN_IDS: return
    text_parts = update.message.text.split(' ', 1)
    command = text_parts[0]
    # ... –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ


# === –ì–õ–ê–í–ù–´–ô –í–ï–ë–•–£–ö –° –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–´–ú –õ–û–ì–ò–†–û–í–ê–ù–ò–ï–ú ===
@app.route('/', methods=['POST'])
def webhook():
    print("--- 1. –í–ï–ë–•–£–ö –í–´–ó–í–ê–ù ---")
    try:
        update_data = request.get_json(silent=True) # silent=True –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç —Å–±–æ–π, –µ—Å–ª–∏ —Ç–µ–ª–æ –Ω–µ JSON
        print(f"--- 2. –ü–û–õ–£–ß–ï–ù–´ –î–ê–ù–ù–´–ï: {json.dumps(update_data, indent=2)} ---")

        if not update_data:
            print("--- 3. –ü–†–û–í–ê–õ: –î–∞–Ω–Ω—ã–µ –ø—É—Å—Ç—ã–µ (update_data is None). –í—ã—Ö–æ–¥. ---")
            return "ok", 200

        print("--- 3. –£–°–ü–ï–•: –î–∞–Ω–Ω—ã–µ –µ—Å—Ç—å. –î–µ—Å–µ—Ä–∏–∞–ª–∏–∑—É–µ–º... ---")
        update = Update.de_json(update_data, bot)
        
        if not (update.message and update.message.text):
            print("--- 4. –ü–†–û–í–ê–õ: –í –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –í—ã—Ö–æ–¥. ---")
            return "ok", 200

        print(f"--- 4. –£–°–ü–ï–•: –ï—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ '{update.message.text}' –æ—Ç {update.message.chat_id}. ---")
        
        text = update.message.text
        if text == '/start':
            print("--- 5. –í–´–ó–´–í–ê–ï–ú –û–ë–†–ê–ë–û–¢–ß–ò–ö /start ---")
            asyncio.run(handle_start_async(update))
        elif text.startswith('/') and update.message.chat_id in ADMIN_IDS:
            print("--- 5. –í–´–ó–´–í–ê–ï–ú –û–ë–†–ê–ë–û–¢–ß–ò–ö –ê–î–ú–ò–ù–ê ---")
            # asyncio.run(handle_admin_command_async(update)) # –ü–æ–∫–∞ –æ—Ç–∫–ª—é—á–∏–º –¥–ª—è —Ç–µ—Å—Ç–∞
            asyncio.run(update.message.reply_text("–ö–æ–º–∞–Ω–¥–∞ –∞–¥–º–∏–Ω–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞!"))


    except Exception as e:
        print(f"--- !!! –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –í–ù–£–¢–†–ò –í–ï–ë–•–£–ö–ê !!! ---")
        print(traceback.format_exc())
            
    print("--- 6. –ó–ê–í–ï–†–®–ï–ù–ò–ï –†–ê–ë–û–¢–´ –í–ï–ë–•–£–ö–ê ---")
    return 'ok', 200
